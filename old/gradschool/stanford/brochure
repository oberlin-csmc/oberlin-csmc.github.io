From joe@CS.Stanford.EDU Mon Jun 20 14:50:08 1994
Status: RO
X-VM-v5-Data: ([nil nil nil nil t nil nil nil nil]
	["84192" "Mon" "20" "June" "94" "11:49:58" "PDT" "Brenda Joe-Matsuo" "joe@CS.Stanford.EDU" "<CMM.0.90.4.772138198.joe@Sunburn.Stanford.EDU>" "1697" "information" "^From:" nil nil "6"])
Received: from Sunburn.Stanford.EDU (Sunburn.Stanford.EDU [36.8.0.178]) by cs.oberlin.edu (8.6.4/8.6.4) with SMTP id OAA22441 for <jmankoff@cs.oberlin.edu>; Mon, 20 Jun 1994 14:50:03 -0400
Received:  by Sunburn.Stanford.EDU (5.67b/25-SUNBURN-eef) id AA02062; Mon, 20 Jun 1994 11:49:58 -0700
Message-Id: <CMM.0.90.4.772138198.joe@Sunburn.Stanford.EDU>
From: Brenda Joe-Matsuo <joe@CS.Stanford.EDU>
To: jmankoff
Subject: information
Date: Mon, 20 Jun 94 11:49:58 PDT

Thank you for your request for information on the Computer Science graduate
programs.  Applications for Autumn 95-96 will not be available after September
1994.  Applications are sent out from the main office of Graduate Admissions,
and you may request an application AFTER JUNE by contacting that office at the
following address or you may call (415) 723-4291 or send correspondence to:

Graduate Admissions Support Section
Office of the Registrar
Stanford University
Stanford, CA  94305-2140 

The application packet will include the Guide to Graduate Admission, a reprint
from the Stanford University Bulletin (course catalog) and a brief handout from
the Computer Science Department.  There will be a $7.00 postage fee for
international application requests.

Additional questions not answered in the following information may be directed
via e-mail or phone.  Please send requests and questions to:
admissions@cs.Stanford.EDU.

Thank you for your interest in Stanford.

Brenda Joe-Matsuo
Grad Admissions Asst.
CS Dept.

P.S. If you would like to request your application via e-mail, please 
1) send a BRIEF message stating your name and mailing address
2) state that you have already received departmental information
3) state if you are an international student.   

Please send your request to:  joe@cs.Stanford.EDU and your request 
will be forwarded to the main office of Grad Admissions.  
IMPORTANT NOTES TO PROSPECTIVE APPLICANTS   '94 - '95


          This information is designed to facilitate your application
          processing and to maximize your chance for admission.  PLEASE READ
          CAREFULLY. Additional information pertinent to the Computer Science
          Department is printed below.  Every effort has been made to provide
          all the information you will need to complete your application.  If
          you have any concerns which are not addressed in these documents, you
          may reach us at (415) 723-6602 or (415) 723-1519 or you may send
          e-mail to admissions@cs.Stanford.EDU.

          Most questions you may have regarding application procedures and the
          Computer Science Department are answered in the reprint from
          the Stanford University Bulletin, Courses and Degrees, and in the
          Guide to Graduate Admissions (application booklet).  Both documents
          are sent from the main office of Grad Admissions as part of the
          application packet.  Please read this material carefully BEFORE 
          you fill out your application.

          Detailed descriptions for the M.S.. And Ph.D. programs are given in
          the reprint from the Stanford University Bulletin.  Please note 
          that our M.S. degree does not lead to the Ph.D. degree.  Applicants
          planning to pursue a Ph.D. degree should apply directly to that
          program as you may only apply to one program.  DO NOT check MS/Ph.D.
          on the application form.  Since the CS Department does not offer such
          a program, you will automatically be considered for the MS program.

          The University application deadline of January 1st for the following
          Autumn Quarter is final for all programs.  Because of the large
          volume of applications received in the Computer Science Department
          during the last week of December, we urge you to submit your
          application before December 1st to avoid any possible delay in its
          processing.  All application materials must be received before
          January 1st for your application to be considered in the review
          process.  Your application cannot be evaluated until all supporting
          materials are received.  Exceptions to the January 1st deadline are
          made only for Honor Co-op applicants and current Stanford students.
          Honor's Co-op applicants may apply only once per academic year and
          information on these deadlines is available from the Department.

All application materials should be sent directly to the Computer Science
Department.  Based on past experience, we strongly advise that you submit your
references, and transcripts simultaneously with your application.  Some schools
and some references will only send information directly to Stanford.  In these
cases, we will accept materials sent under separate cover.  To avoid missing
the above deadlines, make sure any material sent under separate cover by others
has been sent in a timely fashion.

Admissions for the Computer Science Department are very competitive.  Each year
over 800 applications are received for our graduate programs.  It is
recommended that all parts of the application be strong, as many excellent
applications are received.  In order to ensure a complete and competitive
application, careful preparation and attention is required.  Please plan well
in advance for the January 1st deadline.


IMPORTANT APPLICATION INFORMATION

The following application documents must be received before January 1, 1995.:

    *  Completed Stanford University application form (Guide to Grad Admission)
    *  The yellow departmental Supplementary Information Form attached
       to this handout (it is important that this form be returned
       with your application).  Note:  If you are receiving this
       message on-line, another copy of this handout will be sent to
       you, including the Supplementary form.
    *  3 letters of recommendation.  We strongly recommend that at
       least 2 of these letters be from academic sources.
    *  Statement of Purpose - short and concise - approximately 1
       page long.
    *  Transcripts from EACH school attended (include transcripts      
       from NCO courses taken at Stanford).  Final grades from the Autumn
       Quarter classes are not  necessary.  If you want them to be
       considered with your application, please send them in as soon as
       they are available.  We cannot guarantee they will be considered
       in the process if they are received after January 1, 1995.
    *  GRE scores - ALL applicants are required to take the general test.
    *  Ph.D. applicants are ALSO REQUIRED to take the Computer Science Subject
       Test. When appropriate, you may also submit scores from a second
       subject test in another field if they feel that it more closely
       reflects your background
    *  TOEFL scores are required if you have not attended a U.S. college
       for at least two years.  TOEFL must be taken within past 9 months.
    *  International Student's Financial Statement -- required by
       Stanford University

IMPORTANT - While official GRE scores must be received by us directly from the
Educational Testing Services BEFORE you can be considered for admission, if
they are available to you, we strongly advise you to INCLUDE A PHOTOCOPY OF
YOUR SCORES, in case the official scores arrive late.  We urge you to take the
GRE exam early enough to have your scores available when you submit your
application.  Tests taken after October 1994 will not be received in time to be
considered.  Please plan on taking your exam in or before  October 1994.

             IT WILL NOT BE POSSIBLE TO ANSWER ALL TELEPHONE INQUIRIES
             regarding the status of any application.  If you wish to be
             assured that your application was received, complete and return
             the postcards included in your application packet.

             Every effort will be made to inform applicants of the admissions
             decision by the middle of March (beginning of April for MSCS
             program), or for Honors Co-op applicants, as soon after the
             deadline as possible.

             All incoming Ph.D. students are supported by teaching and/or
             research assistantships but are strongly encouraged to apply for
             outside fellowships as well. We do not offer support to MSCS
             students; however, extra teaching and research assistantships are
             open to a limited number of students.  These positions can only be
             arranged after you are in residence at Stanford.

             Financial aid information is only made available to students who
             have been accepted for admission.  The only form of financial aid
             available is in the form of student loans, and in order to
             qualify, you must be a U.S. citizen or permanent resident.

             Information about student loans is automatically sent from the
             Financial Aid Office once your are admitted.

             Because of the volume of requests for interviews with faculty
             members, the department has had to deny all such requests.
             However, you may drop by and talk to our students if you are in
             the area.  Please arrange for your own appointments during visits.
             If you would like to correspond with one of our student
             representatives, you may send e-mail to:
             bureaucrats@cs.Stanford.EDU.

                              STANFORD UNIVERSITY
                        DEPARTMENT OF COMPUTER SCIENCE
                         PROFILES OF RESEARCH PROJECTS

     Founded in 1965, the Department of Computer Science is a center for
     research and education at the undergraduate and graduate levels.
     Strong research groups exist in areas of artificial intelligence,
     robotics, foundations of computer science, scientific computing, and
     systems. Basic work in computer science is the main research goal of
     these groups, but there is also a strong emphasis on
     interdisciplinary research and on applications that stimulate basic
     research.

     Fields in which interdisciplinary work has been undertaken include
     chemistry, genetics, linguistics, physics, medicine and various areas
     of engineering, construction, and manufacturing. Close ties are
     maintained with researchers with computational interests in other
     university departments. In addition, both faculty and students
     commonly work with investigators at nearby research or industrial
     institutions. The main educational goal is to prepare students for
     research and teaching careers either in universities or in industry.

     ARTIFICIAL INTELLIGENCE

     Artificial intelligence consists of a number of related research
     projects with both basic and applied research objectives.  Current
     projects include basic research in artificial intelligence and formal
     reasoning, expert systems, large knowledge bases, agent-based
     architectures, image understanding, robotics, machine learning,
     mathematical theory of computation, program synthesis and
     verification, natural language understanding, parallel architectures,
     design/manufacturing, and portable LISP systems.

     The Artificial Intelligence faculty perform their research in
     collaboration with a number of Stanford laboratories and centers.
     Some of these are the Robotics Laboratory, the Center for the Study
     of Language and Information (CSLI), the Center for Integrated Systems
     (CIS), the Stanford Integrated Manufacturing Association (SIMA),
     Center for Integrated Facility Engineering (CIFE), and the Knowledge
     Systems Laboratory (KSL).

     FACULTY: Thomas O. Binford, Professor (Research), Ph.D. University of
     Wisconsin, 1965.

     AFFILIATIONS:  Robotics Laboratory, CIS.

     GROUP:  Machine Perception

     RESEARCH: Medical imaging; image processing; manufacturing:
     geometric design and tolerancing; precision machining (with Prof. Dan
     DeBra); AI vision systems; geometric modeling and display; mobile
     robots

     FACULTY:  Edward Feigenbaum, Professor of Computer Science, Ph.D.
     Carnegie-Mellon, 1960, Co-Scientific Director, Knowledge Systems
     Laboratory and
     Richard Fikes, Professor (Research), Ph.D. Carnegie-Mellon, 1968.,
     Co-Scientific Director, Knowledge Systems Laboratory

     SENIOR RESEARCH SCIENTISTS:  Robert Engelmore, Barbara Hayes-Roth

     RESEARCH ASSOCIATES:  Thomas Gruber, Yumi Iwasaki

     GROUP:  Knowledge Systems Laboratory

     RESEARCH:

     The How Things Work (HTW) Project --

     An ongoing integrated collection of research activities whose overall
     objective is to develop knowledge-based technology that will provide
     intellectual assistance at high levels of competence to problem
     solvers and decision makers in all stages of the life cycle of
     engineered products.  Specifically, we are developing:

        - Technology for representing knowledge about engineered
          devices in a form that enables the knowledge to be used in
          multiple systems for multiple reasoning tasks, and

        - Reasoning methods that enable the represented knowledge to
          be effectively applied to the performance of core
          engineering tasks such as simulating and analyzing device
          behavior.

     Research topics include:

        - Representation of qualitative behavior models, design
          rationale, functional requirements, and modeling
          assumptions.

        - Automatic formulation of appropriate device models for a
          given analysis task.

        - Simulation of partially specified designs.

        - Description and retrieval of device models by function.

        - Explaining device behavior and analysis results.

     Knowledge Sharing Technology (KST) Project--

     The objective of this project is to significantly reduce the cost of
     building knowledge-based systems by developing a technology and
     methodology for sharing and reusing encoded knowledge.  In
     particular, we are developing:

        - A logic-based knowledge interchange language (KIF)

        - Formalisms for describing translation rules between
          representation languages

        - Tools to automate translation between representation
          languages

        - Tools for developing ontologies in a portable form
          (Ontolingua)

        - Techniques for reconciling differences among ontologies

        - Foundation ontologies for engineering knowledge

     Adaptive Intelligent Systems Project--

     The AIS Project pursues research on "adaptive intelligent systems"
     that perform a variety of knowledge-based reasoning tasks while
     functioning autonomously in dynamic environments.  Specific research
     topics include:  real-time performance; coordination of perception,
     reasoning, and action; integration of diverse reasoning skills and
     tasks; model-based reasoning; explanation of behavior; learning from
     experience; and design of reusable knowledge and reasoning software.

     Computer Industry Project--

     The Stanford Computer Industry Project is an interdisciplinary
     research program dedicated to exploring the organizational and
     technological dynamics of the computer industry.  Research from the
     project is helping to establish Stanford as a center for knowledge
     about the computer industry.  Specific research is related to a study
     of the nature and structure of the software subindustry, particularly
     American and Japanese.

     FACULTY: Michael R. Genesereth, Associate Professor, Ph.D. Harvard,
     1978.

     AFFILIATIONS:  Director of the Logic Group, Robotics Laboratory,
     CIFE.

     GROUP: The Logic Group

     RESEARCH ASSOCIATES: Terril Hurst, Pierre Huyn, Reed Letsinger,
     Narinder Singh

     RESEARCH: The primary activity of the Logic Group is the study of
     logical systems, i.e. information processing systems capable of
     storing, communicating, manipulating, and using information in the
     form of logical statements (constraints, equations, negations,
     disjunctions, rules, and so forth).

     The central (in fact, defining) role of logical information in the
     group's work places strong emphasis on the following areas of basic
     research.

        - Knowlegde representation.  First order logic and its
          variants (both simpler variants, to guarantee computational
          results, and more expressive variants, as needed, for
          example, in the representation of knowledge about
          knowledge).  Construction of large knowledge bases of
          information from science, mathematics, and engineering.

        - Automated reasoning.  This includes work on both deductive
          reasoning (e.g.  resolution) and nondeductive reasoning
          (e.g. induction and abduction).  The group has a long list
          of publications in the area of reasoning efficiency - there
          is work on controlling search, on knowledge base
          reformulation, and on knowledge base compilation (a branch
          of automatic programming).

        - Theory of rational action.  Topics include the tradeoffs
          between computation and action (preprogramming, runtime
          deliberation, and interleaved planning and execution) and
          action in the face of limited information and resources.

     At present, there is a strong emphasis in our work on logical systems
     of a particular sort called agents.  Agents are systems that can tell
     each other what they know and what they are trying to achieve; they
     can accept new information and new tasks and regulate their behavior
     accordingly.  By exchanging information about themselves and their
     environments and using that information to coordinate their
     activities, agents can achieve their goals more effectively than
     systems operating in isolation.  Our interest in agent interaction
     leads to research on the following additional research topics.

        - Communication languages - languages for communication among
          disparate agents, based on the concept of speech acts.

        - Facilitators - agents that provide services in support of
          agent interaction (e.g. yellow pages, content-based message
          routing, problem decomposition, message translation).

        - Collaboration theory.  Principles of cooperation and
          competition (with and without communication), global
          consequences of individual rationality and social laws.

     In concert with this basic research, substantial effort is devoted to
     the application of results in solving specific real work problems.
     Due to the theoretical nature of the group's research, this work is
     not essential to establish the correctness of our results, but the
     effort pays off in validation of the importance of the results and as
     a way of discovering new problems on which to work.  At present, we
     are concentrating primarily on applications of logic technology in
     the National Information Infrastructure.

     In recent years, much has been written about the National Information
     Infrasturcture.  As currently envisioned, it will include computers
     and computer networks; it will include the phone system and broadcast
     media; and it will include information "applicances" of all sorts,
     like TV's and VCR's.  It will be universally accessible - day and
     night, at school and at work and at home, whenever and wherever
     information and services are needed.  It will be able to handle
     information of diverse sorts - text and graphics, audio and video,
     data and knowledge.  It will provide support for collaborative work
     among individuals from different organizaitons with different
     interests and different abilities.

     From a software perspective, what makes the job of creating such an
     infrastructure especially difficult is the heterogeneity of our
     current software environment.  Programs are written by different
     people, at different times, in different languages, and in different
     styles.  Programs run on machines produced by different manufacturers
     and located at different sites.  As a result, users (or their
     programmers) are forced to spend exorbitant time finding the right
     programs and getting them to work together.  Time spent on these
     activities is time taken away from work on the problems those
     programs are intended to solve.

     Our approach to solving this problem is based on the notion of agents
     described above. The idea is for programs to be written as software
     agents.  These agents communicate with their peers in an agent
     communication language.  The most important part of this
     communication is for agents to supply machine-processable
     documentation to other agents.  The agents can then use this
     information to coordinate their efforts.  This coordination is
     assisted through the use of application-independent programs called
     facilitators.

     In this approach, the burden of interoperability is placed on the
     system rather than the programmmers or users.  Programmers can write
     their programs without knowledge of the data structures and
     algorithms of other programs, without knowledge of the hardware on
     which those programs are going to be run.  Users can avail themselves
     of the services of different programs by asking their systems to
     coordinate their interaction.

     In order to illustrate and evaluate this approach, we are working on
     an information infrastructure for electrical, mechanical, and
     software engineers.  The goal of this work is a distributed
     engineering environment that enable teams of engineers from multiple
     organizations to work together over the Internet.  Team members will
     be able to link their design tools so that they can share models and
     data.  They will be able to browse on-line catalogs and handbooks for
     relevant designs and submit promising candidates to remote services
     for simulation and analysis.  When their designs are ready for
     prototyping, engineers will be able to ship the specifications over
     the network, directly or through brokers, to fabrication, assembly,
     and parts procurement services.

     FACULTY: Barbara Hayes-Roth, Senior Research Scientist, Ph.D.
     University of Michigan, 1974.

     AFFILIATIONS: KSL, CIFE, CIS.

     GROUP:  Knowledge Systems Laboratory (Director, Prof. Edward
     Feigenbaum)

     RESEARCH PROJECT:  Adaptive Intelligent Systems

     This project focuses on a class of computer agents that perform
     diverse cognitive and physical behaviors in order to achieve multiple
     goals in dynamic task environments. Research goals are to understand
     the computational requirements of such agents, to identify design
     principles for agents that meet the requirements, and to create a
     practical development methodology comprising a generic agent
     architecture and configurable components. Current research topics
     include: agent architecture, selective attention, time-varying
     situation assessment, reactive behavior, dynamic planning, model-
     based reasoning, learning from experience, resource allocation, and
     global control of interacting tasks. Experimental work is in two
     domains: monitoring intensive care patients and controlling
     autonomous mobile robots.

     For more information, contact Barbara Hayes-Roth:  e-mail:
     hayes-roth@cs telephone: 723-0506

     FACULTY: Oussama Khatib, Associate Professor of Computer Science and
     (by courtesy) Mechanical Engineering, Ph.D. Ecole Nationale
     Superieure de L'Aeronautique et de l'Espace (France) 1980.

     AFFILIATION: Robotics Laboratory, SIMA, CIFE.

     GROUP:  Robotics Manipulation Project -- Robotics Laboratory

     RESEARCH: Robot control architectures, object-level manipulation,
     mobile manipulation, multi-robot cooperation, sensor-based strategies
     and compliant motion primitives, real-time collision avoidance and
     integrated planning and contol, robot graphical simulations, robot
     programming and processing environments, design and development of a
     new generation of force-controlled robot manipulator and mini-
     manipulator systems. One of the primary objectives of this research
     is the development of a general framework for task-oriented
     sensor-based robot control with emphasis on its connections with
     planning systems.

     FACULTY: Jean-Claude Latombe, Associate Professor and Director, AI
     and Robotics Division, Docteur-Ingenieur Grenoble, 1972; Docteur
     d'Etat Grenoble, 1977.

     AFFILIATIONS:  Director, Robotics Laboratory, CIFE, CIS, SIMA.

     GROUP:  Robot Reasoning

     RESEARCH:  Develop autonomous robot systems, which allow the user to
     specify what he wants done rather than how to do it.  Robots include,
     but are not limited to mobile vehicles, manipulator arms, and
     combinations of them.  Current activities focus on automating spatial
     and geometric reasoning.  Our goal is to provide robots with
     general-purpose capabilities for reasoning about their tasks and
     their workspace, and for planning and controlling their motions and
     sensing acts appropriately.  Motions include motions of mobile
     vehicles and manipulator arms, coordinated motions of multiple
     effectors, and operations of various-end effectors (e.g. dextrous
     hands).  Five domains of application of this research are currently
     being investigated: indoor office-assistant mobile robots, assembly
     planning and concurrent design of assembly products, stereotaxic
     radiosurgery (e.g., removal of brain tumors), construction/assembly
     tasks using multiple manipulator arms, and graphic animation.

     FACULTY:  John McCarthy, Charles M. Pigott Professor of Engineering,
     Professor of Computer Science and (by courtesy) Electrical
     Engineering, Ph.D. Princeton, 1951.

     GROUP: Commonsense Reasoning

     RESEARCH:  Developing the theory of commonsense knowledge and
     reasoning, which is concerned with designing formal languages for
     expressing commonsense knowledge and with representing the process of
     commonsense reasoning by logical deduction.  This theory plays a
     central part in AI.  Its mathematical foundation is formed mainly by
     the concepts and ideas of logic which were originally proposed for
     the formalization and study of proofs in mathematics.  There are
     remarkable similarities between commonsense reasoning and
     mathematical proofs, but there are also important differences.  One
     distinctive feature of commonsense reasoning is the use of default
     assumptions, when an argument is justified by the absence of certain
     information among available facts.  Default reasoning is
     non-monotonic, in the sense that extending the given knowledge base
     may invalidate some of the previously used default assumptions and
     thus force us to retract some of the conclusions made before.  The
     study of non-monotonic reasoning is a new and intensively developing
     area of applied logic related to the theory of logic programming and
     deductive databases.

     FACULTY:  John McCarthy

     RESEARCH ASSOCIATES: Carolyn Talcott and Ian Mason

     ASSOCIATED RESEARCHERS:  Jussi Ketonen, Richard Weyhrauch, Lou
     Galbiati

     GROUP: Formal Reasoning and Program Proving

     RESEARCH:  General research interests include semantics and design of
     programming languages, mathematical theory of computation (proving
     properties of programs), and mechanization of formal reasoning.  The
     basic theoretical work in programming language theory is the study of
     mathematical properties of computation mechanisms and the computation
     structures needed to support them.  Of particular interest are
     languages with function and control abstractions, objects with state,
     and concurrency.  Recent work includes developing inference systems
     for proving program equivalence in such languages, and specification
     of classes of programming language algebras that include operational,
     denotational, and static semantics.  The work on formal reasoning
     includes development of `direct logic', extracting bounds information
     from mechanized proofs, and analysis of structures and tools needed
     to support and implement mechanized formal reasoning.

     FACULTY:  Mark Musen, Assistant Professor of Medicine and (by
     courtesy) Computer Science, M.D. Brown, 1980; Ph.D. Stanford, 1988.

     AFFILIATION: Medical Computer Science Group within the KSL.

     GROUP: PROTEGE Project

     RESEARCH:  Automated generation of task-specific knowledge-
     acquisition tools for expert systems.  Languages for modeling
     problem-solving methods.  Architectures for knowledge sharing and
     reuse.  Visual languages for knowledge acquisition.  Adaptive user
     interfaces.  Medical expert systems.

     FACULTY: Mark A. Musen, Edward H. Shortliffe
     GROUP: T-Helper Project

     RESEARCH:  Development of an integrated medical-record and
     decision-support system to assist physicians in the ambulatory care
     of patients with AIDS.  System is being implemented at two Bay Area
     county-operated AIDS clinics.  Research issues include systems
     integration, historical databases and temporal reasoning, adaptive
     user interfaces, knowledge acquisition, medical expert systems.

     FACULTY:  Nils Nilsson, Kumagai Professor of Engineering, Professor
     of Computer Science, Ph.D. Stanford, 1958.

     AFFILIATIONS: CIS, CSLI, CIFE, Robotics Laboratory, Symbolic Systems
     Program.

     GROUP: 'Bots

     RESEARCH:  We are interested in programming autonomous agents (such
     as mobile robots) so that they can function in a real, dynamic
     world---possibly cooperating, communicating, and negotiating with
     other agents.  We seek to integrate learning and planning mechanisms
     into agent architectures so that these mechanisms can modify
     hand-coded programs that control the agent's behavior.  We are
     exploring a behavior formalism based on ``teleo-reactive trees'' and
     delayed-reinforcement learning mechanisms for these trees.  We are
     also interested in ``active perception'' as a means for focusing
     sensory processing.

     FACULTY:  Stanley J. Rosenschein, Consulting Professor, Ph.D.
     Pennsylvania, 1975, Director of Research, Teleos Research; CSLI.

     GROUP: Situated Automata

     RESEARCH:  The situated-automata project is engaged in a long-term
     program of research aimed at developing theoretical foundations and
     design methods for sophisticated embedded computer systems.  Work to
     date has concentrated on mathematical theories of information and new
     programming techniques and languages, as well as experimental robotic
     applications intended to test the theories and design methods.

     A key element in our understanding of embedded systems is the way
     that information from the environment is picked up by a system
     through its sensors and converted to a form ultimately usable for
     controlling action, and for this reason the situated-automata project
     also includes work on machine perception.  This work focuses on
     computational theories of early vision, using ``sign-correlation''
     techniques for binocular stereo and the measurement of optical flow
     fields.  A prototype hand/eye tracking system has been developed and
     is being used for experiments in intelligent reactive control.
     Experimental work on reinforcement learning in embedded systems is
     also underway.  A formal model has been developed, together with
     criteria for comparing learning algorithms on the basis of
     correctness, convergence, and computational resources.

     FACULTY: Yoav Shoham, Assistant Professor, Ph.D.  Yale, 1986.

     AFFILIATIONS:  Robotics Laboratory, SIMA, CSLI, CIFE, CIS.

     GROUP: The Artificial Agents Group, aka Nobotics, located at the
     Robotics Laboratory

     RESEARCH: Our group is interested in a theory of artificial agents
     and their environment. Among the themes investigated:

        - What is a useful and precise way of ascribing mental
          qualities to machines?

        - What are the social rules of artificial agent societies?

     The research style emphasizes both mathematical rigor and
     experimentation.  The theoretical tools include temporal, epistemic
     and nonmonotonic logics, as well as continuous mathematics.
     Applications include robotics, civil engineering and communication
     systems.

     FACULTY:  Jay M. Tenenbaum, Consulting Professor, Ph.D.  Stanford,
     1971.

     AFFILIATIONS:  President, Enterprise Integration Technologies Corp.
     (EIT); Co-Director, MCC Enterprise Integration Initiative; CIS; SIMA.

     IN AFFILIATION WITH: Jeff Pan, Jay Glicksman, and CIS Faculty and
     Staff.

     GROUP: Manufacturing Knowledge Systems

     RESEARCH: We are exploring the application of knowledge systems in
     complex, real-world environments such as engineering and
     manufacturing. Current research is focusing on:

        - Virtual Factories:  The use of computer simulation to
          eliminate the time and cost of physically prototyping both
          products and processes.  Through computational prototyping,
          one may (a) rapidly analyze and control dynamic factory
          performance, (b) predict the results of product and process
          changes prior to implementation, enabling continuous
          improvement and faster development, and (c) provide
          accurate and efficient models for process diagnosis and
          control.

        - Autonomous Agent Architectures:  Development of
          distributed, modular, scalable architectures for
          integrating people, systems and activities.  Such
          architectures consist of agents representing people,
          software/tools, equipment, databases, etc.  The agents
          communicate using a common business language.  They
          register their capabilities and interests with an
          enterprise-wide information service, which is then
          responsible for routing messages to the appropriate
          parties.  Systems structured in this way are inherently
          reliable and flexible.  They also suggest new approaches to
          system integration.  For example, rather than viewing
          software as a ``package'' to buy, install, and maintain,
          software can be viewed as a service, available as needed
          over a network.  (interest in distributed systems)

        - Intelligent Agents:  Autonomous agents that are programmed
          (by end-users) to watch over some element of production,
          responding to events with actions such as shutting down a
          machine, starting up a program, or sending a message to
          another agent.  Agents are self scheduling, yet cooperate
          to achieve the common goal.  Ultimately, thousands can be
          dispatched to watch over every aspect of production,
          ensuring that information flows rapidly and that nothing
          slips through cracks.  Such radically distributed models of
          factory control have interesting analogies in hopes of
          developing factories that are highly reliable and able to
          adapt and learn continuously.  (interest in distributed AI,
          distributed systems, user interfaces, learning).

     FACULTY:  Jay M. Tenenbaum, Mark Cutkowky, Assistant Professor, ME

     GROUP: SHARE

     RESEARCH: SHARE is a distributed environment for concurrent
     engineering, where human and computational agents cooperate by
     exchanging information and services.  SHARE is being used to explore
     a variety of interesting computer science issues, such as:

        - knowledge sharing and reuse (including knowledge
          representation standards) : building large, sharable
          engineering knowledge bases that include both formal
          representations of knowledge and unstructured
          representations such as hypermedia; overcoming the
          single-student barrier in AI systems, where a student
          typically spends several years developing a knowledge base
          that is useful only for one application and is so baroque
          that only that student can maintain it.

        - electronic medium: using multimedia ``electronic
          engineering notebooks'' to access shared knowledge and
          facilitate cooperative work.

        - distributed problem solving: extending classical planning
          methodologies to domains where the planner must cooperate
          with other planners and specialized domain experts--human
          and computerized.

        - incremental re-design: maintaining dependencies linking
          design requirements to artifacts through decisions.  Each
          decision is justified in terms of requirements, other
          decisions, engineering knowledge, assumptions, simulation,
          test results, and so forth.  The problem is rationalizing
          design decisions step by step as a design evolves and
          understanding how to fix the design when any of the factors
          it depends on change -- and doing all this in a
          distributed, man-machine environment where the design
          representation is maintained by multiple agents, each
          concerned with a particular subsystem, engineering
          discipline, or lifecycle stage.

        - using computer vision techniques to create CAD and process
          models from physical artifacts and to recognize features in
          CAD models.

        - monitoring the actual execution of process plans on machine
          tools using a variety of sensors (e.g., vibration, acoustic
          emission, and infrared imagery) and a combination of neural
          networks and expert systems to interpret the resulting
          data.

     FACULTY: Jay M. Tenenbaum

     GROUP: Electronic Commerce

     RESEARCH: (New Project) Create the foundation (technology and
     policies) for a national information infrastructure, supporting
     manufacturing, design, engineering, and analysis. Participate in
     EINet, a prototype currently under development by MCC and five other
     major manufacturing consortia (NCMS, Sematech, ITI, CAMI and Iacocca
     Institute). Ultimately, EINet will encompass thousands of design,
     engineering, prototyping, and acquisition services -- all accessible
     through the Internet, and serving to seamlessly link manufacturers,
     customers, suppliers, subcontractors, development partners and
     distributors.  To support this vision of electronic commerce, it will
     be necessary to enhance the Internet along several dimensions. These
     include security, ease of use (e.g., directory and navigation aids),
     functionality (e.g., multimedia, standards, translation), and
     remittance (pay for use of data and services). Numerous policy issues
     relating to commercial use (e.g., advertising, scaling of traffic,
     standard trade agreements) must also be addressed.  (ideal for CS
     students who also have an interest in business).

     FACULTY: Terry Winograd, Professor, Ph.D. MIT, 1970.

     PROJECT:  People, Computers and Design project at the Center for the
     Study of Language and Information (CSLI)

     RESEARCH:  Human computer interaction design and the design of
     computer systems for cooperative work.  Professor Winograd's focus is
     on developing the theoretical background and technical innovations
     that will be needed to incorporate human contextual elements into the
     design and analysis of computer systems.  He is developing teaching
     and research programs that address questions of human-computer
     interaction from a design perspective.  He is also editing a book on
     software design that focusses on the interaction between technology
     and human use in the design of computer systems.

     During the 92-93 academic year (through Fall Quarter 1993) Professor
     Winograd has been at Interval Research, initiating projects in the
     area of interfaces to large information spaces.  He has also
     continuing to develop a "language-action perspective" in which
     computing devices are understood and designed in the context of the
     social activity by which people generate a space of coordinated
     actions.  The People Computers and Design project has been partially
     funded by an NSF grant to create a series of innovative courses on
     human-computer interaction.

     In the 93/94 academic year, he will initiate a research activity at
     Stanford on interfaces to large heterogeneous information spaces
     (such as the Internet), in collaboration with Interval Research, as
     well as continuing the development of the Human-Computer Interaction
     program.

     Scientific Computing

     The research in scientific computing involves two closely related
     aspects:  development of mathematically based theory to solve
     particular problems, and implementation of appropriate computer
     algorithms.  Particular emphasis is placed on numerical accuracy of a
     computation; additional considerations are made of algorithm design,
     computational efficiency, data structures and parallel procedures.
     Seminars are held almost every week of the year with members of the
     Stanford community and industrial researchers.  Close cooperation and
     collaboration with government and industrial laboratories is
     maintained, and there is an active visitors program.

     Research is done in collaboration with the Scientific Computing and
     Computational Mathematics Program.

     FACULTY:  Gene H. Golub, Fletcher Jones Professor of Computer Science
     and (by courtesy) Electrical Engineering, and Director, Scientific
     Computing Division, Ph.D. University of Illinois, 1959.

     AFFILIATION:  Chairman, Scientific Computing and Computational
     Mathematics (SCCM); CIS.

     RESEARCH:  My current research is mainly concerned with the design
     and analysis of algorithms arising in linear algebra; my book (with
     Charles Van Loan) reflects my interests in that area.  Recently, I
     have been concerned with matrix methods in signal processing,
     updating/downdating of orthogonal polynomials and the solution of
     large sparse systems of equations, mainly arising in the
     discretization of pde's.  Each of these problems is motivated by
     applications. I have a peripheral interest in parallel algorithms and
     my recent work describes the implementation of a variety of
     algorithms.

     FACULTY: Joseph Oliger, Professor, Ph.D. Uppsala, 1973.

     Affiliation:  Director, Center for Large Scale Scientific Computation
     (CLaSSiC Project); SCCM.

     CO PRINCIPAL INVESTIGATORS AND ASSOCIATED FACULTY:  J. Ferziger (ME);
     R. Street (CE); J. Keller (Math); G. Homsy (ChemE) T. Hughes (ME)

     GROUP NAME: CLaSSiCS, Center for Large Scale Scientific Computing at
     Stanford.

     RESEARCH:  This is an interdisciplinary project focused upon problems
     associated with the computer simulation or analysis of physical
     processes.  The system aspect of interaction of problem formulation
     (mathematical), algorithm formulation, language and system
     implementation, and hardware design is central to this project.
     Current projects are under way in each of these areas and their
     interaction.  The identification and implementation of parallel
     processes is a current focus.  Other projects involve the development
     of programming environments for scientific computations.

     FACULTY:  Andrew M. Stuart, Assistant Professor of Computer Science
     and Mechanical Engineering, D. Phil Oxford, 1986.

     AFFILIATIONS: Numerical Analysis. Joint appointment with Mechanical
     Engineering, Division of Applied Mechanics.

     RESEARCH:

     Numerical Analysis of Differential Equations.  Application of
     Analytical and Computational Tools in Applied Mathematics.

     Systems

     The systems area encompasses both experimental and theoretical work
     growing out of topics in operating systems and compilers, computer
     communication and networks, architecture, programming languages and
     environments, distributed systems, VLSI design and fabrication,
     graphics, reliability and fault tolerance, system specification and
     verification, and user interfaces. A large concentration of systems
     research takes place within the Computer Systems Laboratory, a joint
     laboratory of the Departments of Computer Science and Electrical
     Engineering.

     FACULTY:  Charles Bigelow, Associate Professor of Art and Computer
     Science (Teaching), B.A. Reed, 1967, C.A.S. Harvard University, 1991.

     RESEARCH: Digital typographic designs.  My interests include the
     design of fonts, symbols, and icons for user interfaces and for
     electronic publishing, and the design of electronic and printed
     documents.

     FACULTY:  David Cheriton, Associate Professor, Ph.D. University of
     Waterloo, 1978.

     AFFILIATIONS:  CIS, CSL.

     PROJECT: Distributed Systems

     RESEARCH:

        - Parallel architecture, systems and programming, including
          hardware development of a multiprocessor machine, parallel
          operating system, parallel language and compiler, plus
          various parallel and distributed applications.

        - High-performance Communication: very fast wide-area
          networks, network interfaces, multiprocessor gateways,
          multicast, distributed systems architectures and protocols.

        - High-performance cluster operating systems, supporting
          distributed execution, process migration, scheduling,
          atomic transactions and distributed shared memory.

     FACULTY:  Giovanni De Micheli, Associate Professor, Electrical
     Engineering and (by courtesy) Computer Science, Ph.D. University of
     California, Berkeley, 1983.

     GROUP: Synthesis of Digital Circuits and Systems

     AFFILIATIONS:  CIS, CSL.

     RESEARCH:  Interested in Computer-Aided Design methods and tools for
     VLSI circuits.  At present he is interested in automated synthesis
     systems, with particular emphasis on optimization techniques, and in
     circuit verification methods.  His research is centered on the
     development of algorithms, the study of their properties as well as
     their implementation.  Recently he engaged research in system-level
     design automation, including hardware-software codesign techniques.

     FACULTY: David Dill, Assistant Professor, Computer Science and (by
     courtesy) Electrical Engineering, Ph.D. Carnegie Mellon, 1987.

     AFFILIATIONS:  CIS, CSL.

     PROJECT: Finite-state Concurrent Systems

     RESEARCH: Specification and verification of finite-state concurrent
     systems. Specifically:

        - verification and synthesis of real-time systems.

        - protocol specification and verification

        - hardware verification

        - automata theory and temporal logic

     FACULTY: David Dill, Teresa Meng, Giovanni De Micheli

     PROJECT: Asynchronous Circuits

     RESEARCH: Explorations in asynchronous circuit design, including:

        - automatic synthesis from high-level specifications

        - safe design methods

        - alternative design styles

        - fault modeling and testability

        - automatic verification

        - performance analysis

     FACULTY:  Michael J. Flynn , Professor of Electrical Engineering,
     Ph.D. Purdue University, 1961.

     PROJECT: CASIS--Center for Aeronautics and Space Information Sciences

     RESEARCH:  CASIS is a large interdisciplinary multi-faculty program
     to support evolving information technology for application in NASA's
     space program.  Currently CASIS is organized into four major thrust
     areas: computer architecture and compilers to support high
     performance architectures, neural networks and control, high-speed
     data networks, and data presentation technology, including graphics
     and database management.

     OTHER FACULTY INVOLVED: Profs. John Cioffi, Hector Garcia-Molina,
     Bert Hesselink, Tom Kailath, Monica Lam, Marc Levoy, Allen Peterson,
     Fouad Tobagi, Gio Wiederhold.

     FACULTY:  Michael J. Flynn

     PROJECT: Studies in Concurrent Architectures

     RESEARCH: To develop tools to predict the performance of various
     processor combinations using actual programs as a workload.  These
     tools have lead earlier to the development of the Architect's
     Workbench (the AWB) which has been widely distributed and used for
     advanced microprocessor floorplanning.

     A shared memory version of the AWB, called the PAWB, is being
     developed for study and use in the design of shared memory
     multiprocessors.

     Another aspect of this program is studies in massively parallel or
     fine-grained parallel processing. In this area we have been
     particularly interested in particle or cellular solutions to problems
     in high-turbulence gas dynamics as an alternative to the numerical
     solution of the Navier-Stokes equations.

     FACULTY:  Michael J. Flynn

     OTHER FACULTY: Profs. Giovanni De Micheli, Bob Dutton, Fabian Pease,
     Bruce Wooley

     PROJECT: SNAP--Subnanosecond Arithmetic Processor

     RESEARCH:  The SNAP program was developed to create a basic
     technology for high-speed arithmetic which would provide significant
     performance advantages in the area of floating point arithmetic and
     arithmetic co-processors. The design goals of SNAP pushed the state
     of the art in both chip and system technologies. It consists of
     multiple chips on an active substrate (wafer). Each chip represents a
     functional unit of a high-speed arithmetic co-processor.  The
     functional units originally identified include (together with their
     target execution delays): floating-point adder, 2-3 ns, floating-
     point multiplier, 5 ns, floating-point divide, 10-15 ns, register
     file, 1 ns, control unit, and integer unit, 1-2 ns.

     Finally, we have an objective of a one-ns repetition rate for
     communication between chips and for pipeline rates across chips.
     During the past year we have completed a unique test chip based upon
     the concept of wave pipelining, which uses delays intrinsic to the
     circuits themselves as storage elements in a high-speed pipelined
     functional implementation. Wave pipelining is a target technology
     that we believe will allow us to achieve extremely high pipelining
     rates with functional units. Simulations and measurements show that
     two or more pipelined waves are possible, thus doubling the normal
     clock frequency without additional registers.

     FACULTY: Hector Garcia-Molina, Professor, Ph.D. Stanford, 1979.

     GROUP:  Real Time Transaction Processing Systems

     RESEARCH:  Many applications have both real time constraints and a
     need for database services to manage large volumes of data.  Our goal
     is to investigate real time database systems (RTDBS) that can provide
     this functionality, as well as high data availability.  In this
     project we study a dual system approach, where the RTDBS interacts
     with a conventional database system (CDBS) that holds non-real-time
     data. This makes it possible to tune each system for a particular
     workload and functionality.  A prototype RTDBS is being implemented
     for studying issues such as value functions for transactions,
     fault-tolerant processor pairs for the RTDBS, and dynamic facilities
     for importing and exporting data to the CDBS.  Our algorithms and
     prototype will be evaluated by a benchmark based on a
     telecommunications application.

     FACULTY: Hector Garcia-Molina and Jeffrey Ullman

     GROUP: Electronic Libraries

     RESEARCH:  As part of a consortium of five research universities
     (Berkeley, Cornell, CMU, MIT, and Stanford) we are investigating and
     developing an Electronic Library System.  Such a system will provide
     very fast access to vast numbers of documents, articles, and books
     that will soon be available electronically.  At Stanford, we are
     doing research on distributed searching and indexing, and selective
     dissemination of information.

     FACULTY: Hector Garcia-Molina and Jeffrey Ullman,

     SENIOR RESEARCHER:  Arthur Keller

     AFFILIATIONS:  CIS, CSL.

     GROUP: Tsimmis

     RESEARCH:  Our goal is to develop a next generation information
     management system that will provide integrated access to a wide
     variety of information and knowledge sources. The system will manage
     or provide access to unstructured text data, such as newswire stories
     and files, to conventional structured databases, to electronic
     libraries, to raw data from satellite images and simulation
     experiments, and to knowledge bases containing rules for information
     processing.  Through this system a decision maker will be able to
     find information of interest, fuse information from different
     sources, and process it (e.g., summarize it, visualize it, discover
     trends).  In addition to supporting extraction of information, the
     system will also support rule-based information management. In
     particular, it will provide tools for monitoring and enforcing
     constraints across heterogeneous information repositories.

     FACULTY:  Anoop Gupta, Assistant Professor, Ph.D. Carnegie-Mellon,
     1985.

     AFFILIATIONS:  CIS, CSL.

     GROUP:  DASH (Directory Architecture for Shared Memory)

     OTHER FACULTY: Prof. John Hennessy

     RESEARCH:  Design of general-purpose scalable parallel computer
     architectures -- mechanisms for cache consistency; ways to reduce or
     tolerate memory latency; hardware/software support for efficient
     synchronization; understanding the role of locality.  Currently
     building a scalable directory-based shared-memory multiprocessor
     using very high performance individual nodes.  In the software area,
     working on operating systems issues, programming languages, and
     performance debugging tools for parallel computers.  In the
     applications area, studying parallelism in a variety of applications
     domains (e.g., graphics, transaction processing, protean structure).
     The applications work is also used for evaluating our hardware and
     software efforts.  Most recently, I am starting a small effort in the
     area of multimedia computing.

     FACULTY:  John Hennessy , Willard R. and Inez Kerr Bell Professor of
     Engineering, Professor of Computer Science and Electrical
     Engineering, and Director, Systems Division, Ph.D.  State University
     of New York at Stony Brook, 1977.

     AFFILIATIONS:  Director of CSL, CIS

     PROJECT: Multiprocessor Architecture

     RESEARCH:  The objective of this research is to explore the design
     and implementation of large-scale, general-purpose multiprocessors.
     The end-goal will be to build a large-scale multiprocessor as a
     follow-on to the current DASH project.

     FACULTY:  John Hennessy

     PROJECT:  Parallel processing compiler and language technology

     RESEARCH:  The goals of this project are to explore programming
     language design and implementation focusing on programming and
     efficiency issues for large-scale multiprocessors.

     FACULTY:  Mark Horowitz, Associate Professor of Electrical
     Engineering and (by courtesy) Computer Science, Ph.D. Stanford, 1984.

     AFFILIATIONS:  CIS, CSL.

     PROJECT: Multiprocessor Architecture

     RESEARCH:  The objective of this research is to explore the design of
     large-scale, general-purpose, shared-memory multiprocessors.  This is
     a large project involving a number of faculty members.  My research
     interest in this project is looking at how implementation issues
     affect the architecture and design of the multiprocessor.  We have
     been looking at how to organize the design of the directory
     controller that maintains cache consistency, and how to use
     high-bandwidth I/O techniques to build a high-speed interconnection
     network

     FACULTY:  Mark Horowitz

     PROJECT: Low Power Integrated Circuit / Processor Design

     RESEARCH:  The objective of this research is to explore methods of
     reducing the power required by high-performance processors and signal
     processors.  Initial work will focus on getting a better
     understanding of where power is dissipated in current ICs and to
     explore the speed / power tradeoffs possible in the microarchitecture
     of a machine.  In this research we assume that the power supply
     voltage used for the chip is not fixed, and can be adjusted to
     provide the right speed/power tradeoff.  Assuming different chips can
     use different supply voltages leads to a number of circuit challenges
     (supply generation, and communication between the chips for example)
     that will be addressed in this work.  This work is also investigating
     the feasibility of placing a tracking clock generator on the chip, to
     allow the chip to be run at the silicon limit, rather than the
     worst-case spec limit.  Using the tracking clock generator both
     provides a higher peak performance and a better speed/power product.

     FACULTY:  Mark Horowitz

     PROJECT:  Superconducting Memory Design

     RESEARCH:  The objective of this research is to explore the design of
     memory devices for superconducting electronics.  There has been some
     recent work in superconducting electronics that has renewed interest
     in this technology.  One of the principle problems with this
     technology is the difficulty in making dense/fast memories.  This
     work will investigate superconducting memory design to understand
     what is difficult with conventional architectures, and see if some
     novel structures (like the kinetic inductance cell) improve the
     situation.  In addition we plan on looking at hybrid semi/super
     technologies to see if the resulting hybrid system has advantages of
     a purely semiconductor or superconductor approach

     FACULTY:  Monica Lam, Assistant Professor of Computer Science, Ph.D.
     Carnegie Mellon University, 1987.

     AFFILIATIONS: CSL, CIS.

     GROUP:  Compiling for Parallel Machines

     OTHER FACULTY:  Prof. John Hennessy

     RESEARCH: To build a compiler that automatically parallelizes
     sequential code to run on parallel machines.  The target
     architectures include superscalar machines, shared memory
     multiprocessors and distributed memory machines.  Our research
     approach consists of the entire cycle of designing, implementing and
     evaluating new concepts.  We also use compiler technology to evaluate
     parallel computer architectures.

     FACULTY:  Monica Lam

     GROUP: Language for Parallel Machines

     RESEARCH: To develop programming language support for writing
     parallel applications.  Our approach is to develop high level
     language constructs to support various common parallel programming
     paradigms directly, and to develop an infrastructure to faciliate the
     implementation of such constructs.

     FACULTY:  Marc Levoy, Assistant Professor of Computer Science and
     Electrical Engineering, Ph.D.  University of North Carolina at Chapel
     Hill, 1989.

     AFFILIATIONS:  CSL, CIS.

     GROUP:  Computer Graphics

     RESEARCH:  Computer graphics, scientific visualization, and
     interactive techniques.  Professor Levoy's current research focuses
     on the analysis and rendering of multidimensional sampled data (i.e.
     volume rendering), digitization of 3D objects using novel scanner
     technologies, and the design of languages and user interfaces for
     data visualization.  He is also interested in realistic image
     synthesis, computer animation, high-performance graphics
     architectures, parallel algorithms as they apply to graphics, and
     exotic user interface technologies such as eye tracking, head
     tracking and head-mounted displays.

     FACULTY:  David Luckham, Professor (Research) of Electrical
     Engineering, Ph.D. MIT, 1963.

     AFFILIATIONS:  CIS, CSL.

     GROUP:  Program Analysis and Verification Group

     RESEARCH ASSOCIATES: Larry Augustin, Doug Bryan, Walter Mann.

     GROUP MEMBERS: Prof. Sigurd Meldal (from Univ. Bergen), Dr.  Frank
     Belz of TRW, and other visitors from afar and from industry.

     RESEARCH:  Design of new computer languages for specification and
     prototyping of large distributed time-critical systems that include
     both hardware and software components. Particular topics of current
     interest include executable architecture definition languages, formal
     constraint languages, and languages for composing systems of modules
     written in different programming languages (interoperability).

     The group is designing and implementing various programming
     environment tools to support applications of prototyping languages,
     particularly:

        - event-based simulators,

        - runtime checking of consistency between behavior and
          specifications,

        - graphical programming tools,

        - formal analysis of specifications,

        - interoperation tools,

        - construction of self-checking systems on multi-processors.

     The group is also collaborating with other Stanford CSD faculty
     members, and research groups at other universities and in industry.
     Research Topics:

        - design of a new event-based prototyping language for large
          distributed realtime systems,

        - interoperability,

        - specification languages for concurrency and timing,

        - formal proof rules for verifying behavioral and timing
          properties of concurrent systems,

        - multi-processor systems,

        - theory and formalisms for software systems architecture.

     FACULTY:  Edward J. McCluskey Professor of Computer Science and
     Electrical Engineering, Sc.D. MIT, 1956.

     AFFILIATIONS:  Director, Center for Reliable Computing, CIS, CSL.

     GROUP: Center for Reliable Computing

     RESEARCH ASSOCIATE: vacant

     RESEARCH:  Broad objective is design and production of high quality
     digital systems.  Specific currrent projects:

        - Design and implementation of a high-level synthesis system
          that will accept a functional-level system specification
          written in enhanced VHDL.  This specification includes
          functional, performance, reliability, testability, fault
          tolerance and maintainability attributes.  An appropriate
          implementation will be produced automatically.

        - Studies of the characteristics (failure modes) of actual
          hardware failures (reliability and transient failures in
          CMOS and BiCMOS) and procedures for detecting these
          failures.  We are especially interested in failures that
          are not detected as single-stuck faults.

        - Development of new, novel design-for-testability techniques
          for detecting failures that are not detected by standard
          single-stuck fault test methods.

     FACULTY: Teresa Meng, Assistant Professor of Electrical Engineering
     and (by courtesy), Computer Science, Ph.D. U.C. Berkeley, 1988

     AFFILIATIONS: CSL, CIS, ISL.

     PROJECT: Asynchronous Design for Parallel Processing Architectures

     RESEARCH:  The objective of this research is to provide an
     interconnect design synthesis methodology which facilitates a modular
     design approach without compromising the global performance.  The
     goal is to support fast-prototyping of parallel processing systems
     with a minimal amount of design effort by providing an asynchronous
     interconnect strategy which allows the overall system performance to
     be improved by individual optimization of computer modules.  This
     allows the equivalent of the ``object oriented'' software methodology
     to be applied to hardware design.  The main tasks of this effort will
     be the development of the theory for asynchronous circuit synthesis
     from a high-level specification, with emphasis on timing and
     performance among parallel computing hardware objects, and the
     application of this design methodology to physical implementations of
     multi-processing systems.

     FACULTY: Teresa Meng

     PROJECT:  Portable Video

     RESEARCH:  The goal of this research is to design a data compression
     system capable of maintaining consistent visual quality for image and
     video signals transmitted in a wireless communication environment.
     The focus of this research is two-fold: algorithm development and
     hardware prototyping.  We will develop video compression algorithms
     which display reliability and reconstruction capability in situations
     of severe packet loss and can sustain effective video service in a
     network in which the available bandwidth is constantly changing.
     Furthermore, because of portability constraints, these algortihms
     will be optimized for efficient hardware implementations and for low
     power requirements.  We plan to design and fabricate low-power
     modules that will demonstrate significantly higher quality video
     transmitted through a noisy channel with more than an order of
     magnitude less power than what is possible with present day
     solutions.

     FACULTY:  Kunle Olukotun, Assistant Professor of Electrical
     Engineering and (by courtesy) Computer Science, PH.D. The University
     of Michigan, 1991

     AFFILIATIONS: CSL, CIS

     PROJECT: Automating Architectural Design

     RESEARCH:  The goal of this research is to significantly reduce the
     time and effort that it takes to design and verify processor based
     systems. To achieve this goal we will develop the capability to
     explore the system design space in much less time than is possible
     today. The approach taken will be to combine sophisticated computer
     performance evaluation with logic and layout synthesis synthesis to
     create an environment for automatically estimating the
     cost/performance of candidate computer designs. To speed up the
     verification phase of system design we are exploring the practical
     applications of formal verification techniques. The key challenges to
     this research are to formalize the high level architectural design
     process so that it can be integrated with existing tools for low
     level design and to develop and analyze processor verification
     techniques that work on real systems. Much of the architectural level
     design exploration will be done by manipulating a hardware
     description language (HDL) representation of the architecture.

     FACULTY:  Mendel Rosenblum, Assistant Professor of Computer Science,
     Ph.D. U.C. Berkeley, 1992

     AFFILIATIONS: CSL

     PROJECT: Operating systems and storage management

     RESEARCH:

        - System software for massively parallel machines.  Research
          is examining kernel structuring issues, virtual memory
          systems, filing and I/O subsystems.

        - Permanent storage management. Research is examining file
          layout and access strategies for disk and disk arrays.

        - Distributed systems. Research is investigating techniques
          for integrating computer servers into distributed systems.

     FACULTY:  Fouad Tobagi, Professor of Electrical Engineering and (by
     courtesy) Computer Science, Ph.D. UCLA, 1974.

     AFFILIATIONS:  CSL, CIS, Stanford Center for Telecommunications.

     PROJECT:  Design and Analysis of High-Speed Integrated Services
     Communications Networks

     Spurred by the high transmission capacity of fiber optics technology,
     applications requiring higher bandwidth than possible in present
     networks have emerged. Because of the high data rates involved as
     well as the diversity of the applications characteristics, the
     creation of future high-speed integrated service networks is a
     challenging task.  We have been engaged in research in several
     interrelated areas pertaining to the design of such networks and to
     the characterization of the applications: (i) architecture design and
     hardware implementation of large-size fast packet switches, with
     emphasis on added functionalities (e.g., support of bursty traffic);
     (ii) performance evaluation of high-speed networks in the presence of
     bursty traffic, using measures of quality relevant to the
     applications (e.g., signal-to-noise ratio for still image
     transmission or for video).  (iii) design of dynamically
     reconfigurable optical networks; and (iv) study of distributed
     computation and communications on a large scale.

     Theory

     Faculty in the theory division seek greater understanding of
     fundamental computational techniques and their inherent limitations.
     Research includes the development of new sequential and parallel
     algorithms, computational problems in databases, computational
     geometry, design and analysis of programs and programming languages,
     and supporting studies in combinatorial, logical, and algebraic
     mathematics.

     FACULTY:  Andrew Goldberg, Assistant Professor and (by courtesy)
     Operations Research, Ph.D. MIT., 1987.

     GROUP: Design and Analysis of Algorithms

     RESEARCH:  Design and analysis of efficient algorithms for
     combinatorial optimization problems.  Parallel and distributed
     algorithms.  Lower bounds and complexity theory.

     FACULTY:  Leonidas J. Guibas, Professor, Ph.D. Stanford, 1976.

     AFFILIATION:  Theory, Robotics, CSL.

     GROUP:  Computational Geometry and Computer Graphics

     RESEARCH:  THE DESIGN AND ANALYSIS OF GEOMETRIC ALGORITHMS:
     Computational geometry is, in its broadest sense, the study of
     geometric problems from a computational point of view.  At the core
     of the field is a set of techniques for the representation of
     geometric objects and for the design and analysis of algorithms
     manipulating these representations.

     Specific current areas of interest include:

        - Parametric searching:  The goal here is to generically
          transform algorithms that solve a decision problem (``Is
          the largest distance between any two points of a given set
          S of n points in 3-d less than or equal to d?'') to
          algorithms that solve the corresponding optimization
          problem (``What is the largest distance...?'').

        - Output-sensitivity in degenerate situations:  Over the last
          five or six years several techniques have been developed to
          deal with degeneracies (e.g. collinear points, etc.) in
          geometric computations.  These often work by effecting or
          simulating a perturbation of the input that destroys the
          degeneracies.  Such perturbations, however, are likely to
          increase the output size of the result, and thus the
          complexity of computing it.  We are investigating ways to
          handle degeneracies while remaining faithful to the
          complexity of the original unperturbed output.

        - Model-based recognition in computer vision:  In computer
          vision many problems arise where the goal is to recognize a
          shape among a class of possible given shapes.  What makes
          this a challenging problem is that the image of an object
          may be scaled, rotated, or otherwise transformed from the
          original prototype, it may be partially occluded, the input
          data may be noisy, etc.  We are especially interested in
          the additional complexity introduced by objects having a
          small number of degrees of freedom (such as, scissors), and
          in the use of recognition techniques for localization and
          navigation.

        - Line hulls of objects in 3-D:  Roughly speaking, the line
          hull of an object is the smallest object containing the
          original that cannot be distinguished from it with probes
          involving infinite straight lines moving through free
          space.  The line hull produces all the same shadows as the
          original object and is a useful concept for vision
          algorithms trying to extract shape from rotation.  We are
          currently investigating ways to represent the line hull and
          algorithms for computing it.

        - Minkowski Sums:  The notion of the Minkowski sum of two
          geometric shapes is the fundamental concept used in
          configuration-space approaches to the motion planning
          problem in robotics. In this project we are investigating
          several combinatorial and algebraic questions about such
          sums. In particular, we are interested in certain
          multi-linear extensions of the boolean nature of the this
          sum, and its applications to the problem of morphing
          between shapes.

     EFFICIENT MODELING AND REASONING ABOUT PHYSICAL SYSTEMS:  The goal of
     this research is to develop new techniques for simulating physical
     phenomena, or for reasoning about physical objects.  Our main
     application areas are computer graphics and robotics, so we are most
     concerned with modeling well the geometric and optical properties of
     various environments.  Our goal is to attack problems involving
     ``many'' objects that would be prohibitively expensive if approached
     in a straightforward manner. We plan to use clever combinatorial and
     geometric techniques to find approximate solutions within reasonable
     time bounds.

        - A new formulation of the global illumination problem:  We
          have a new formulation for the problem of computing the
          steady-state light energy flow in a scene, as well as a new
          algorithm for computing a good approximation to this flow.
          Classical radiosity in computer graphics deals only with
          surface reflections and even for these it cannot properly
          handle directional reflections of specular elements. Our
          Monte-Carlo method is based on a hierarchical subdivision
          of the space of "photon-hops" and on "three-way" light
          interactions (these ideas are intimately coupled). As a
          result, both participating media (such as fog), and
          directional reflections (light from A bouncing off B to
          reach C) can be accurately modeled in our framework. A
          further benefit is that in areas of the environment that
          are dark or otherwise unimportant, multiple objects can be
          clustered together and thus represented more efficiently.

     FACULTY:  Joseph Halpern, Consulting Professor, Ph.D.  Harvard,
     1981., Research Staff Member, IBM Almaden Research Laboratory.

     GROUP:  Reasoning about Knowledge and Probability

     RESEARCH:  I am involved in two (related) lines of research.  The
     first is reasoning about knowledge:

     Systems of agents (where the "agents" can be robots, processors in a
     distributed system, negotiators in a bargaining system, etc.)
     interact through communication and then must make decisions.  A good
     way of analyzing this interaction turns out to be in terms of
     knowledge, considering how the knowledge changes as a result of
     communication and what levels of knowledge are required to perform
     various actions.

        - The goal is to provide a general framework for modeling
          knowledge, and to use that framework to analyze and better
          understand interacting systems.

        - The second is finding principled ways of forming degrees of
          belief given a knowledge base which consists of
          first-order, statistical, default, and causal information.

     FACULTY:  Zohar Manna, Professor, Ph.D. Carnegie-Mellon, 1968.

     GROUP MEMBERS:  Richard Waldinger (Consulting Professor of Computer
     Science, and Staff Scientist, SRI International); Amir Pnueli
     (Visiting Professor of Computer Science, and Professor, Weizmann
     Institute)

     RESEARCH TOPICS:  The relationship between logic and computer
     programming.  Current research topics include the following:

        - Program Verification: The Logic of Programs

        - Program Synthesis: Deriving Programs from Specifications

        - Theorem Proving: Automated Deduction -- Techniques and
          Applications

        - Reactive Systems: Concurrency, Real-time, and Hybrid
          Systems

        - Temporal Logic: The Logic of Time

        - Automated Planning

     The development of an interactive theorem prover and its application
     to software engineering and artificial intelligence.  Applications
     include program synthesis and verification, and robotic and
     commonsense planning.  The deductive system combines unification-
     based methods such as resolution with proof by mathematical
     induction.  Proofs are restricted to be sufficiently constructive so
     that programs and other information may be extracted.

     A situational logic has been employed for the synthesis of imperative
     programs and for planning applications.  Research is underway leading
     to the synthesis of concurrent programs and plans.  Domain-dependent
     inference rules are being introduced to give the system particular
     facility with application theories.

     A reactive system is a system whose role is to maintain an ongoing
     interaction with its environment, such as concurrent and real-time
     programs, embedded systems, communication networks, air-traffic
     control systems, avionic and process control programs, operating
     systems, and many others.  One of the most promising and widely
     accepted approaches to the specification and verification of reactive
     systems is that of temporal logic.  Extensions to the temporal
     methodology for reactive systems are currently being investigated for
     real-time and hybrid systems.  The real-time extension considers the
     timing aspects of reactive systems and contains a specification
     language and proof methodology for specifying and proving the timing
     properties of systems.  Hybrid systems are systems consisting of a
     non-trivial mixture of discrete and continuous components, such as a
     digital controller that controls a continuous environment, control of
     process and manufacturing plants, guidance of transport systems,
     robot planning, and many similar applications.  The extended
     methodology will provide a (temporal) language for specifying the
     desired behavior of such systems, methods for their rigorous
     development, and proof techniques for verifying that a developed
     program, interacting with an appropriate continuous environment,
     meets its specification.  We also examine approaches to the automatic
     verification (model checking) of hybrid systems.

     FACULTY:  John C. Mitchell, Associate Professor, Ph.D. MIT, 1984.

     AFFILIATION:  CSL

     GROUP: Programming Language Theory and Design

     RESEARCH:  Type systems for programming languages, object-oriented
     programming, logical methods for reasoning about programs,
     development of programming language design tools.  Two language
     design projects are a type and module system for object-oriented
     programming and a revision of the programming language ML.
     Theoretical projects include linear logic, semantic domains based on
     recursion theory, revised treatments of nontermination, and
     integration of algebraic and type-theoretic methods.

     FACULTY:  Rajeev Motwani, Assistant Professor, Ph.D. University of
     California, Berkeley, 1988.

     RESEARCH:  Algorithms and Complexity Theory.

     Algorithms and data structures, with emphasis on randomization and
     approximation algorithms.  Complexity theory and lower bounds.
     Computational geometry and applications to vision/robotics.

     The goal of this research is to design a data compression system
     capable of maintaining consistent visual quality for image and video
     signals transmitted in a wireless communication environment.  The
     focus of this research is two-fold: algorithm development and
     hardware prototyping.  We will develop video compression algorithms
     which display reliability and reconstruction capability in situations
     of severe packet loss and can sustain effective video service in a
     network in which the available bandwidth is constantly changing.
     Furthermore, because of portability constraints, these algortihms
     will be optimized for efficient hardware implementations and for low
     power requirements.  We plan to design and fabricate low-power
     modules that will demonstrate significantly higher quality video
     transmitted through a noisy channel with more than an order of
     magnitude less power than what is possible with present day
     solutions.

     Serge A. Plotkin, Assistant Professor, Ph.D. MIT., 1988.

     RESEARCH:  Design of algorithmic approaches for solving optimization
     problems in the context of sequential, parallel, and distributed
     computation through better understanding of the graph-theoretic
     properties of these problems.  In the sequential computation setting,
     we consider the multicommodity and generalized flow problems,
     scheduling, and approximation algorithms for special classes of
     Linear Programming.  We also study theoretical issures that arise in
     the context of computation over a distributed network of processors.
     Currently our main effort n this area is concentrated on solving
     several problems related to routing packets and virtual circuits in a
     distributed network where the goal is to minimize congestion while
     maximizing the throughput.  In the parallel computation context, the
     emphasis is on the design of parallel graph algorithms that are
     efficienct both in terms of time and the number of required
     processors.

     FACULTY:  Vaughan Pratt, Professor and Director, Computer Science
     Theory Division, Ph.D. Stanford, 1972.

     RESEARCH SCIENTIST: Rob van Glabbeek

     INDUSTRY AFFILIATES: Jeremy Gunawardena, Vadim Kotov, Lucy Cherkasova

     GROUP: Concurrency Modeling

     RESEARCH:  Understanding existing models of concurrency, developing
     new models, and investigating their properties.  Application of the
     results to the design and definition of concurrent programming
     languages and their associated tools.

     FACULTY:  Jeffrey D. Ullman, Professor and Chairman of Computer
     Science and (by courtesy) Electrical Engineering, Ph.D. Princeton,
     1966.

     OTHER RESEARCH MEMBERS: Craig Howard, Kincho Law, and Paul Teicholz
     of Civil Engineering

     SENIOR RESEARCH SCIENTIST: Arthur Keller

     GROUP: CEDB

     RESEARCH: We are looking at database tools for integrating the
     various design elements in a large construction project.  Important
     challenges are the management of versions and configurations, the
     management of constraints, notification of constraint violations, and
     the interactions among these aspects.

